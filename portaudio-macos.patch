diff -ur portaudio.orig/configure portaudio/configure
--- portaudio.orig/configure	2020-11-15 17:23:02.000000000 -0800
+++ portaudio/configure	2020-11-15 22:35:08.000000000 -0800
@@ -15884,13 +15884,16 @@
               elif xcodebuild -version -sdk macosx10.15 Path >/dev/null 2>&1 ; then
                  mac_version_min="-mmacosx-version-min=10.4"
                  mac_sysroot="-isysroot `xcodebuild -version -sdk macosx10.15 Path`"
+              elif xcodebuild -version -sdk macosx11.1 Path >/dev/null 2>&1 ; then
+                 mac_version_min="-mmacosx-version-min=10.9"
+                 mac_sysroot="-isysroot `xcodebuild -version -sdk macosx11.1 Path`"
               else
-                 as_fn_error $? "Could not find 10.5 to 10.13 SDK." "$LINENO" 5
+                 as_fn_error $? "Could not find 10.5 to 11.1 SDK." "$LINENO" 5
               fi
            esac
 
                                  mac_arches=""
-           for arch in x86_64
+           for arch in x86_64 arm64
            do
               save_CFLAGS="$CFLAGS"
               CFLAGS="$CFLAGS -arch $arch"
diff -ur portaudio.orig/configure.in portaudio/configure.in
--- portaudio.orig/configure.in	2020-11-15 17:23:02.000000000 -0800
+++ portaudio/configure.in	2020-11-15 22:35:45.000000000 -0800
@@ -267,15 +267,18 @@
               elif xcodebuild -version -sdk macosx10.15 Path >/dev/null 2>&1 ; then
                  mac_version_min="-mmacosx-version-min=10.4"
                  mac_sysroot="-isysroot `xcodebuild -version -sdk macosx10.15 Path`"
+              elif xcodebuild -version -sdk macosx11.1 Path >/dev/null 2>&1 ; then
+                 mac_version_min="-mmacosx-version-min=10.9"
+                 mac_sysroot="-isysroot `xcodebuild -version -sdk macosx11.1 Path`"
               else
-                 AC_MSG_ERROR([Could not find 10.5 to 10.13 SDK.])
+                 AC_MSG_ERROR([Could not find 10.5 to 11.1 SDK.])
               fi
            esac
 
            dnl Pick which architectures to build for based on what
            dnl the compiler supports.
            mac_arches=""
-           for arch in x86_64
+           for arch in x86_64 arm64
            do
               save_CFLAGS="$CFLAGS"
               CFLAGS="$CFLAGS -arch $arch"
